- name: Listing java path 
  ansible.builtin.win_shell: "((ls)).Name | Select-String -Pattern 'jdk' -CaseSensitive -SimpleMatch | Sort-object -Descending|out-string).trim()"
  args: 
    chdir: "{{ BaseJavaPath }}"
  register: listoutJavaPath

- name: define empty variable 
  childJavaPath: []

- name: Java path exist status 
  ansible.builtin.win_stat: 
    path: "{{ BaseJavaPath }}\\{{ listoutJavaPath.stdout_lines[0]}}"
  register: path_java
  ignore_errors: True 

- name: Setting up java env path
  ansible.builtin.win_shell: |
    [ENVIRONMENT]::SetEnvironmentVariable("JAVA_HOME", "{{ BaseJavaPath }}\\{{ listoutJavaPath.stdout_lines[0]}}", "user")
    [ENVIRONMENT]::SetEnvironmentVariable("Path", "$env:path + "{{ BaseJavaPath }}\\{{ listoutJavaPath.stdout_lines[0]}}\bin", "user")
  register: java_env_path_set
  ignore_errors: True 
  when: path_java.stat.exists


- name: Test java version
  ansible.builtin.win_shell: java -version
  register: test_java
  ignore_errors: True 

- name: "Set the service status info success"
  ansible.builtin.set_fact: 
     setJavaPathInfoStatus: "{{ setJavaPathInfoStatus + ['java Env PATH set successfully: '~java_test.stderr] }}"
  when: java_env_path_set.changed == True and java_env_path.stat.exists == True 

- name: "Set the service status info failed"
  ansible.builtin.set_fact: 
     setJavaPathInfoStatus: "{{ setJavaPathInfoStatus + ['java Env PATH set successfully: '~java_test.stderr] }}"
     envJavapathCount: "{{ envJavapathCount + int +1 }}"
  when: java_env_path_set.changed == False and java_env_path.stat.exists == False 
  
  